/*
wget https://github.com/k2-fsa/sherpa-onnx/releases/download/tts-models/kitten-nano-en-v0_2-fp16.tar.bz2
tar xf kitten-nano-en-v0_2-fp16.tar.bz2
rm kitten-nano-en-v0_2-fp16.tar.bz2
cargo run --example tts_kitten
*/

use sherpa_rs::tts::{KittenTts, KittenTtsConfig};

fn main() {
    let config = KittenTtsConfig {
        model: "./kitten-nano-en-v0_2-fp16/model.fp16.onnx".to_string(),
        voices: "./kitten-nano-en-v0_2-fp16/voices.bin".into(),
        tokens: "./kitten-nano-en-v0_2-fp16/tokens.txt".into(),
        data_dir: "./kitten-nano-en-v0_2-fp16/espeak-ng-data".into(),
        length_scale: 1.0,
        ..Default::default()
    };
    let mut tts = KittenTts::new(config);

    let sid = 2;
    let text = "Hello, this is generated by the Kitten text-to-speech model.";
    let audio = tts.create(&text, sid, 1.0).unwrap();
    dbg!(audio.sample_rate);
    sherpa_rs::write_audio_file("audio.wav", &audio.samples, audio.sample_rate).unwrap();
    println!("Created audio.wav")
}
